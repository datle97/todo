{"version":3,"sources":["actions/types.js","actions/actions.js","components/AddTodo.js","components/TodoItem.js","components/TodoList.js","components/Header.js","theme/index.js","App.js","reducers/reducer.js","reducers/index.js","store.js","index.js"],"names":["ADD_TODO","REMOVE_TODO","CHECK_TODO","SELECT_TODO","UNSELECT_TODO","EDIT_TODO","unselectTodo","type","useStyles","makeStyles","theme","root","paddingRight","display","alignItems","margin","spacing","input","marginLeft","flex","divider","height","button","textTransform","borderRadius","AddTodo","classes","useState","text","setText","dispatch","useDispatch","Paper","component","className","onSubmit","event","preventDefault","newTodo","id","uuid","checked","addTodo","InputBase","autoFocus","placeholder","value","onChange","target","Divider","orientation","Button","color","completed","textDecoration","TodoItem","todo","editId","useSelector","state","reducer","TableRow","TableCell","padding","Checkbox","align","clsx","IconButton","onClick","newText","onFocus","select","fullWidth","form","toolbar","paddingLeft","title","flexGrow","TodoList","todoList","Toolbar","variant","Typography","filter","length","TableContainer","Table","TableBody","map","icon","Header","darkMode","switchTheme","AppBar","position","Container","maxWidth","createMuiTheme","require","overrides","MuiTableRow","borderBottom","lightTheme","palette","darkTheme","primary","main","error","App","setDarkMode","ThemeProvider","CssBaseline","initialState","action","newTodoList","index","findIndex","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73fcdcb2.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\r\nexport const REMOVE_TODO = \"REMOVE_TODO\";\r\nexport const CHECK_TODO = \"CHECK_TODO\";\r\nexport const SELECT_TODO = \"SELECT_TODO\";\r\nexport const UNSELECT_TODO = \"UNSELECT_TODO\";\r\nexport const EDIT_TODO = \"EDIT_TODO\";\r\n","import {\r\n  ADD_TODO,\r\n  CHECK_TODO,\r\n  EDIT_TODO,\r\n  REMOVE_TODO,\r\n  SELECT_TODO,\r\n  UNSELECT_TODO,\r\n} from \"./types\";\r\n\r\nexport const addTodo = (newTodo) => ({\r\n  type: ADD_TODO,\r\n  newTodo,\r\n});\r\n\r\nexport const removeTodo = (id) => ({\r\n  type: REMOVE_TODO,\r\n  id,\r\n});\r\n\r\nexport const checkTodo = (id) => ({\r\n  type: CHECK_TODO,\r\n  id,\r\n});\r\n\r\nexport const selectTodo = (id) => ({\r\n  type: SELECT_TODO,\r\n  id,\r\n});\r\n\r\nexport const unselectTodo = () => ({\r\n  type: UNSELECT_TODO,\r\n});\r\n\r\nexport const editTodo = (id, newText) => ({\r\n  type: EDIT_TODO,\r\n  id,\r\n  newText,\r\n});\r\n","import {\r\n  Paper,\r\n  InputBase,\r\n  Divider,\r\n  makeStyles,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../actions/actions\";\r\nimport { v1 as uuid } from \"uuid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingRight: 0,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    margin: theme.spacing(3, 0),\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n  },\r\n  button: {\r\n    textTransform: \"none\",\r\n    borderRadius: \"0 4px 4px 0\",\r\n  },\r\n}));\r\n\r\nconst AddTodo = () => {\r\n  const classes = useStyles();\r\n  const [text, setText] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (text) {\r\n      const newTodo = { id: uuid(), text, checked: false };\r\n      dispatch(addTodo(newTodo));\r\n      setText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper component=\"form\" className={classes.root} onSubmit={handleSubmit}>\r\n      <InputBase\r\n        className={classes.input}\r\n        autoFocus\r\n        placeholder=\"Enter new todo\"\r\n        value={text}\r\n        onChange={handleChange}\r\n      />\r\n      <Divider className={classes.divider} orientation=\"vertical\" />\r\n      <Button color=\"primary\" type=\"submit\" className={classes.button}>\r\n        Add\r\n      </Button>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import { useState } from \"react\";\r\nimport {\r\n  Checkbox,\r\n  IconButton,\r\n  InputBase,\r\n  makeStyles,\r\n  TableCell,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport clsx from \"clsx\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  checkTodo,\r\n  editTodo,\r\n  removeTodo,\r\n  selectTodo,\r\n  unselectTodo,\r\n} from \"../actions/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  completed: {\r\n    textDecoration: \"line-through\",\r\n  },\r\n}));\r\n\r\nconst TodoItem = ({ todo }) => {\r\n  const classes = useStyles();\r\n  const [text, setText] = useState(\"\");\r\n  const { editId } = useSelector((state) => state.reducer);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    dispatch(editTodo(todo.id, text));\r\n    dispatch(unselectTodo());\r\n  };\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell padding=\"checkbox\">\r\n        <Checkbox\r\n          color=\"primary\"\r\n          checked={todo.checked}\r\n          onChange={() => dispatch(checkTodo(todo.id))}\r\n        />\r\n      </TableCell>\r\n      {editId !== todo.id ? (\r\n        <>\r\n          <TableCell\r\n            align=\"left\"\r\n            padding=\"none\"\r\n            className={clsx({\r\n              [classes.completed]: todo.checked,\r\n            })}\r\n          >\r\n            {todo.text}\r\n          </TableCell>\r\n          <TableCell align=\"right\" padding=\"checkbox\">\r\n            <IconButton\r\n              onClick={() => {\r\n                // dùng text của todo hiện tại(khi thay đổi text và huỷ sẽ không làm thay đổi giá trị ban đầu)\r\n                setText(todo.text);\r\n                dispatch(selectTodo(todo.id));\r\n              }}\r\n            >\r\n              <EditIcon />\r\n            </IconButton>\r\n          </TableCell>\r\n          <TableCell align=\"right\" padding=\"checkbox\">\r\n            <IconButton onClick={() => dispatch(removeTodo(todo.id))}>\r\n              <DeleteIcon color=\"error\" />\r\n            </IconButton>\r\n          </TableCell>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <TableCell align=\"left\" padding=\"none\">\r\n            <form id=\"editForm\" onSubmit={handleSubmit}>\r\n              <InputBase\r\n                className={classes.input}\r\n                value={text}\r\n                autoFocus\r\n                onFocus={(event) => {\r\n                  event.target.select();\r\n                }}\r\n                fullWidth\r\n                onChange={handleChange}\r\n              />\r\n            </form>\r\n          </TableCell>\r\n          <TableCell align=\"right\" padding=\"checkbox\">\r\n            {/* lỗi khi chỉ dùng IconButton => auto submit??? */}\r\n            <div>\r\n              <IconButton type=\"submit\" form=\"editForm\">\r\n                <DoneIcon />\r\n              </IconButton>\r\n            </div>\r\n          </TableCell>\r\n          <TableCell align=\"right\" padding=\"checkbox\">\r\n            <IconButton onClick={() => dispatch(unselectTodo())}>\r\n              <CloseIcon color=\"error\" />\r\n            </IconButton>\r\n          </TableCell>\r\n        </>\r\n      )}\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import {\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst TodoList = () => {\r\n  const classes = useStyles();\r\n  const { todoList } = useSelector((state) => state.reducer);\r\n\r\n  return (\r\n    <Paper>\r\n      <Toolbar variant=\"dense\" className={classes.toolbar}>\r\n        <Typography className={classes.title}>Todo List</Typography>\r\n        <Typography>\r\n          Completed: {todoList.filter((todo) => todo.checked).length}\r\n        </Typography>\r\n      </Toolbar>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableBody>\r\n            {todoList.map((todo) => (\r\n              <TodoItem key={todo.id} todo={todo} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import {\r\n  AppBar,\r\n  Container,\r\n  IconButton,\r\n  makeStyles,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  icon: {\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst Header = ({ darkMode, switchTheme }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar component={Container} maxWidth=\"md\">\r\n        <Typography variant=\"h4\" className={classes.title}>\r\n          Todo App\r\n        </Typography>\r\n        <IconButton onClick={switchTheme}>\r\n          {darkMode ? (\r\n            <Brightness4Icon className={classes.icon} />\r\n          ) : (\r\n            <Brightness7Icon className={classes.icon} />\r\n          )}\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const { createMuiTheme } = require(\"@material-ui/core\");\r\n\r\nconst overrides = {\r\n  overrides: {\r\n    // khi dùng table trong Paper => 2 border-bottom(tự động thêm border last child)\r\n    MuiTableRow: {\r\n      root: {\r\n        \"&:last-child td\": {\r\n          borderBottom: 0,\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const lightTheme = createMuiTheme({\r\n  ...overrides,\r\n  palette: {\r\n    type: \"light\",\r\n  },\r\n});\r\n\r\nexport const darkTheme = createMuiTheme({\r\n  ...overrides,\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#90caf9\",\r\n    },\r\n    error: {\r\n      main: \"#f48fb1\",\r\n    },\r\n  },\r\n});\r\n","import { useState } from \"react\";\nimport { Container, CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport AddTodo from \"./components/AddTodo\";\nimport TodoList from \"./components/TodoList\";\nimport Header from \"./components/Header\";\nimport { darkTheme, lightTheme } from \"./theme\";\n\nconst App = () => {\n  const [darkMode, setDarkMode] = useState(true);\n  const switchTheme = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n      <CssBaseline />\n      <Header darkMode={darkMode} switchTheme={switchTheme} />\n      <Container maxWidth=\"md\" component=\"main\">\n        <AddTodo />\n        <TodoList />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import {\r\n  ADD_TODO,\r\n  REMOVE_TODO,\r\n  CHECK_TODO,\r\n  SELECT_TODO,\r\n  UNSELECT_TODO,\r\n  EDIT_TODO,\r\n} from \"../actions/types\";\r\nimport { v1 as uuid } from \"uuid\";\r\n\r\nconst initialState = {\r\n  todoList: [\r\n    { id: uuid(), text: \"Learn the MERN stack\", checked: true },\r\n    { id: uuid(), text: \"Build a TMDb Clone\", checked: true },\r\n    { id: uuid(), text: \"Find a job\", checked: false },\r\n  ],\r\n  editId: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return { ...state, todoList: [action.newTodo, ...state.todoList] };\r\n    case REMOVE_TODO:\r\n      return {\r\n        ...state,\r\n        todoList: [...state.todoList.filter((todo) => todo.id !== action.id)],\r\n      };\r\n    case CHECK_TODO:\r\n      return {\r\n        ...state,\r\n        todoList: [\r\n          ...state.todoList.map((todo) =>\r\n            todo.id === action.id\r\n              ? { ...todo, checked: !todo.checked }\r\n              : { ...todo }\r\n          ),\r\n        ],\r\n      };\r\n    case SELECT_TODO:\r\n      return {\r\n        ...state,\r\n        editId: action.id,\r\n      };\r\n    case UNSELECT_TODO:\r\n      return {\r\n        ...state,\r\n        editId: null,\r\n      };\r\n    case EDIT_TODO: {\r\n      const newTodoList = [...state.todoList];\r\n      const index = newTodoList.findIndex((todo) => todo.id === action.id);\r\n      newTodoList[index].text = action.newText;\r\n\r\n      return { ...state, todoList: newTodoList };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  reducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}